{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-a9974155c5d36b754571.js","mappings":"qQAqDA,EAvBMA,SAAM,GAAGC,IAAAA,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YACpB,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,WAAkBC,EAAlB,WAEA,OACE,kBACE,aAAKC,MAAK,QAAUJ,EADtB,QAEE,cAAMK,GAAI,CAAEC,WAAF,SAAwBC,eAAxB,gBAAyDC,SAAnE,UACE,cAASC,GAAT,KAAiBC,QAAjB,YAAqCL,GAAI,CAAEM,QAA3C,IACGX,EAFL,OAIE,cACES,GADF,OAEEJ,GAAI,CAAEK,QAAF,kBAA8BC,QAFpC,GAGEC,IAAIC,EAAAA,EAAAA,GAAe,IAAD,MAHpB,IANJ,mBAcE,aAASd,MAAT,EAAuBM,GAAI,CAAES,GAAI,CAAC,EAftC,QC9BF,MCce,SAA4B,GAAKC,IAAAA,EAAgB,oBAEpDC,EACND,EAFJ,aAIA,OAAO,iCAAKhB,MAAOiB,EAAZ,OAAP,M,4GC4BF,EAtBMC,SAAe,OAAGC,EAAH,yBACnB,cAAKC,GAAL,SACE,cAAOV,GAAP,OAAiBG,GAAIM,EAArB,KAAgCE,MAAO,CAAEC,WAAzC,UAAiEhB,GAAI,CAAEiB,SAAU,CAAC,EAAE,QAAf,SAAmCC,MAAxG,SACGL,EAFL,QAIE,aAAGE,MAAO,CAAEI,OAAF,IAAeF,SAAzB,SAA8CJ,EAJhD,cAME,eAAKE,MAAO,CAACK,QAAD,OAAkBnB,WAA9B,UAAoDD,GAAI,CAAEkB,MAAF,YAAsBT,GAAtB,EAA6BY,EAAG,CAAEH,MAAlC,aAAwDD,SAAU,CAAC,EAAE,EAA7H,KACGJ,EAAAA,aACIA,EAAAA,YADJA,QAEIA,EAAAA,YAFJA,QAIC,gBAAME,MAAO,CAACK,QAAD,OAAiBnB,WAAjB,SAAsCqB,YAAnD,MACE,aAAUC,KAAV,GAAoBC,MAAOX,EAAAA,YAA3B,MAAmDE,MAAO,CAAEU,aAAF,OAAwBH,YADpF,MAEIT,EAAAA,YAPR,SAUE,oBAAOA,EAjBQ,SCCrB,EARMa,SAAU,OAAGhC,EAAH,sBAAUiC,OAAV,wBAA0BC,OAA1B,gBACd,mBAAS5B,GAAI,CAAEc,GAAI,CAAC,EAAE,EAAtB,IAAgCa,UAAhC,GACGjC,EAAAA,KAAU,mBACT,WAAcmC,IAAKhB,EAAnB,KAA8BA,KAA9B,EAA0Ce,SADjC","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tag.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Link as TLink, Flex } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\ntype TagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n}\n\nconst Tag = ({ posts, pageContext }: TagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Seo title={`Tag: ${pageContext.name}`} />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <TLink\n          as={Link}\n          sx={{ variant: `links.secondary`, marginY: 2 }}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n","import { graphql } from \"gatsby\"\nimport TagComponent from \"../components/tag\"\n\nexport default TagComponent\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx, Link as TLink } from \"theme-ui\"\nimport { Box } from \"@theme-ui/components\"\nimport { Link } from \"gatsby\"\nimport { Author } from \"../../../gatsby-plugin-theme-ui/components\"\nimport Gravatar from 'react-gravatar'\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    frontmatter: {\n      [key: string]: any\n    }\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={\"44px\"}>\n    <TLink as={Link} to={post.slug} style={{ fontWeight: \"bolder\" }} sx={{ fontSize: [3, \"1.7em\", \"1.7em\"], color: `text` }}>\n      {post.title}\n    </TLink>\n    <p style={{ margin: \"0\", fontSize: \"17px\" }}>{post.description}</p>\n    \n    <div style={{display: \"flex\", alignItems:'center'}} sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 1] }}>\n      {post.frontmatter\n        && post.frontmatter.author\n        && post.frontmatter.email &&\n      \n        <span style={{display:\"flex\", alignItems:\"center\", marginRight: 10}}>\n          <Gravatar size={35} email={post.frontmatter.email} style={{ borderRadius: \"25px\", marginRight: 10 }} />\n          { post.frontmatter.author }\n        </span>\n      }\n      <time>{post.date}</time>    \n    </div>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["Tag","posts","pageContext","useMinimalBlogConfig","tagsPath","basePath","title","sx","alignItems","justifyContent","flexFlow","as","variant","marginY","to","replaceSlashes","mt","props","allPost","BlogListItem","post","mb","style","fontWeight","fontSize","color","margin","display","a","marginRight","size","email","borderRadius","Listing","className","showTags","key"],"sourceRoot":""}